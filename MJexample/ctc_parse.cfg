    cfg_file = argv[1]

    # read configure file
    cfg = ConfigParser.ConfigParser()
    cfg.read(cfg_file)
    global TFR_LIST_FILE
    TFR_LIST_FILE = cfg.get('input', 'input_list_file')
    global LIST_FILE_ROOT
    LIST_FILE_ROOT = cfg.get('input', 'list_file_root')
    global CMVN_FILE
    CMVN_FILE = cfg.get('input', 'cmvn_file')
    global TR_LIST_NUM
    TR_LIST_NUM = cfg.getint('input', 'input_list_lines')

    global SHUFFLE_LIST
    SHUFFLE_LIST = cfg.getboolean('input', 'shuffle_list')
    global NUM_EPOCHS
    NUM_EPOCHS = cfg.getint('input', 'num_epochs')

    global FREQ_BIN_NUM
    FREQ_BIN_NUM = cfg.getint('input', 'freq_bin_num')
    global CHANNEL_NUM
    CHANNEL_NUM = cfg.getint('input', 'channel_num')
    global TARGET_CLASS_NUM
    TARGET_CLASS_NUM = cfg.getint('input', 'target_class_num')

    global IS_TRAINING
    IS_TRAINING = cfg.getboolean('input', 'is_training')

    # if training is true, output model to this place.
    # else, load model from this place for testing.
    global OUTPUT_MODEL_DIR
    OUTPUT_MODEL_DIR = cfg.get('output', 'output_model_dir')
    global OUTPUT_MODEL_FILE
    OUTPUT_MODEL_FILE = cfg.get('output', 'output_model_file')
    global OUTPUT_TEST_DIR
    OUTPUT_TEST_DIR = cfg.get('output', 'output_test_dir')
    global LOG_DIR
    LOG_DIR = cfg.get('output', 'log_dir')
    global PRINT_LOSS_BATCH
    PRINT_LOSS_BATCH = cfg.getint('output', 'print_loss_batch')
    global OUTPUT_MODEL_BATCH
    OUTPUT_MODEL_BATCH = cfg.getint('output', 'output_model_batch')

    global BATCH_SIZE
    BATCH_SIZE = cfg.getint('param', 'batch_size')
    global START_FREQ_BIN
    START_FREQ_BIN = cfg.getint('param', 'start_freq_bin')
    global TOTAL_FREQ_BIN
    TOTAL_FREQ_BIN = cfg.getint('param', 'total_freq_bin')

    global GPU_DEVICES
    GPU_DEVICES = cfg.get('param', 'gpu_devices').split()
    global CPU_DEVICES
    CPU_DEVICES = cfg.get('param', 'cpu_devices').split()

    global CNN_LAYER_NUM
    CNN_LAYER_NUM = cfg.getint('param', 'cnn_layer_number')
    global CNN_FILTER_NUMS
    CNN_FILTER_NUMS = [int(_) for _ in cfg.get('param', 'cnn_filter_nums').split(',')]
    global CNN_LAYERNORM
    CNN_LAYERNORM = [int(_) for _ in cfg.get('param', 'cnn_layernorm').split(',')]
    global CNN_POOLING_TIME_STRIDES
    CNN_POOLING_TIME_STRIDES = [int(_) for _ in cfg.get('param', 'cnn_pooling_time_strides').split(',')]
    global CNN_POOLING_FREQ_STRIDES
    CNN_POOLING_FREQ_STRIDES = [int(_) for _ in cfg.get('param', 'cnn_pooling_freq_strides').split(',')]

    global LSTM_LAYER_NUM
    LSTM_LAYER_NUM = cfg.getint('param', 'lstm_layer_num')
    global LSTM_HIDDEN_SIZE
    LSTM_HIDDEN_SIZE = cfg.getint('param', 'lstm_hidden_size')

    global ROW_CONV_SIZE
    ROW_CONV_SIZE = cfg.getint('param', 'row_conv_size')

    global LEARNING_RATE
    LEARNING_RATE = cfg.getfloat('param', 'learning_rate')
    global START_HALVING_INC
    START_HALVING_INC = cfg.getfloat('param', 'start_halving_inc')
    global END_HALVGING_INC
    END_HALVGING_INC = cfg.getfloat('param', 'end_halvging_inc')
    global HALVING_FACTOR
    HALVING_FACTOR = cfg.getfloat('param', 'halving_factor')

    global USE_CV
    USE_CV = cfg.getboolean('param', 'use_cv')
    global CV_STEPS
    CV_STEPS = cfg.getint('param', 'cv_steps')

    global BEAM_WIDTH
    BEAM_WIDTH = cfg.getint('param', 'beam_width')

